---
interface Props {
    href: string;
    target?: string;
    rel?: string;
    class?: string;
    nav?: boolean;
}

const { href, target, rel, class: className, nav = false, ...rest } = Astro.props;
---

<a href={href} target={target} rel={rel} class={`button ${nav ? 'nav-button' : 'content-button'} ${className || ''}`} {...rest}>
    <slot />
</a>

<style>
    .button {
        background: linear-gradient(180deg, rgba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0.2) 50%, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0) 100%), linear-gradient(180deg, #008000 0%, #90EE90 100%);
        box-shadow: 0px 0px .5rem .1rem rgba(0, 0, 0, 0.5);
        border-radius: 100em;
        margin: 0;
        font-style: normal;
        display: inline-block;
        text-align: center;
        text-decoration: none;
        color: #FFFFFF;
        border: 1px solid #999;
        text-shadow: 0px 0px .3rem rgba(0, 0, 0, 0.7);
        transition: all 0.2s ease;
        position: relative;
        overflow: hidden;
        user-select: none;
    }

    .nav-button {
        padding: .1rem 2rem;
        font-size: 2rem;
    }

    .content-button {
        padding: .1rem 2rem;
        font-size: 1.5rem;
    }

    .button::before {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0;
        height: 0;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.3);
        transform: translate(-50%, -50%);
        transition: width 0.6s ease, height 0.6s ease;
        pointer-events: none;
    }

    .button:hover {
        background: linear-gradient(0deg, rgba(255, 255, 255, 0) 0%, #FFFFFF 100%), linear-gradient(180deg, rgba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0.2) 50%, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0) 100%), linear-gradient(180deg, #008000 0%, #90EE90 100%);
        transform: translateY(-2px);
        box-shadow: 0px 2px .7rem .2rem rgba(0, 0, 0, 0.6);
    }

    .button:active {
        transform: translateY(0px) scale(0.98);
        box-shadow: 0px 0px .3rem .1rem rgba(0, 0, 0, 0.4);
        transition: all 0.1s ease;
    }

    .button:active::before {
        width: 300px;
        height: 300px;
        transition: width 0.3s ease, height 0.3s ease;
    }

    .button:focus {
        outline: none;
        box-shadow: 0px 0px .5rem .1rem rgba(0, 0, 0, 1), 0 0 0 3px rgba(255, 255, 255, 0.6);
    }
    @media (max-width: 768px) {
        .content-button {
            text-align: center;
            display: block;
            margin: 0 auto;
            width: fit-content;
        }
    }
</style> 